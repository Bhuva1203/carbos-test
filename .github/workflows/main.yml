# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: enforce-codeowner
  # You may pin to the exact commit or the version.
  # uses: cuichenli/enforce-codeowner@a9109e36d2dae888b89379012aa494a2fd6e3136
        uses: cuichenli/enforce-codeowner@v1.0.0
    #    with:
    # Location of the codeowner file.
    #      CODEOWNERS_This PATH: # optional, default is .github/CODEOWNERS
    # Post a comment to the PR if the files changed do not have a code owner
    #      POST_COMMENT: # optional, default is true
    # The owner and repository name. For example, gh-codeowners/codeowners-samples. Used to check if GitHub team is in the given organization and has permission to the given repository.
    #owner_checker_repository: # optional, default is ${{ github.repository }}
    # The comma-separated list of owners that should not be validated. Example: @owner1,@owner2,@org/team1,example@email.com.
    #owner_checker_ignored_owners: # optional
    # Specifies whether CODEOWNERS may have unowned files. For example, `/infra/oncall-rotator/oncall-config.yml` doesn't have owner and this is not reported.
    #owner_checker_allow_unowned_patterns: # optional, default is true
    # Specifies whether only teams are allowed as owners of files.
    #owner_checker_owners_must_be_teams: # optional, default is false
    # Only check listed subdirectories for CODEOWNERS ownership that don't have owners.
    #not_owned_checker_subdirectories: # optional
    # Specifies whether the repository path should be marked as safe. See: https://github.com/actions/checkout/issues/766
    #not_owned_checker_trust_workspace: # optional, default is true
          
      
