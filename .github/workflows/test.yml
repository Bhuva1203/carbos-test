name: Update CODEOWNERS
on:   
  pull_request:
    branches: [ main, develop, feature/* ]
jobs:
  update-codeowners:
    runs-on: ubuntu-20.04
    name: Update CODEOWNERS
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Update CODEOWNERS file
        uses: gmolau/codeowners@v0.1.5

      - name: Commit CODEOWNERS file
        uses: EndBug/add-and-commit@v7
        with:
          message: Update CODEOWNERS file (CODEOWNERS Bot)
      - name: GitHub CODEOWNERS Validator
  # You may pin to the exact commit or the version.
  # uses: mszostok/codeowners-validator@7f3f5e28c6d7b8dfae5731e54ce2272ca384592f
        uses: mszostok/codeowners-validator@v0.7.4
        with:
    # The GitHub access token. Instruction for creating a token can be found here: https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/#creating-a-token. If not provided then validating owners functionality could not work properly, e.g. you can reach the API calls quota or if you are setting GitHub Enterprise base URL then an unauthorized error can occur.
          github_access_token: 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
    # The GitHub base URL for API requests. Defaults to the public GitHub API, but can be set to a domain endpoint to use with GitHub Enterprise. Default: https://api.github.com/
      #    github_base_url: # optional
    # The GitHub upload URL for uploading files. It is taken into account only when the GITHUB_BASE_URL is also set. If only the GITHUB_BASE_URL is provided then this parameter defaults to the GITHUB_BASE_URL value. Default: https://uploads.github.com/
   #       github_upload_url: # optional
    # The comma-separated list of experimental checks that should be executed. By default, all experimental checks are turned off. Possible values: notowned.
    #experimental_checks: # optional, default is 
    # The list of checks that will be executed. By default, all checks are executed. Possible values: files,owners,duppatterns,syntax
    #checks: # optional, default is 
    # The repository path in which CODEOWNERS file should be validated.
    #repository_path: # optional, default is .
    # Defines the level on which the application should treat check issues as failures. Defaults to warning, which treats both errors and warnings as failures, and exits with error code 3. Possible values are error and warning. Default: warning
    #check_failure_level: * @bhaku-1
    # The comma-separated list of patterns that should be ignored by not-owned-checker. For example, you can specify * and as a result, the * pattern from the CODEOWNERS file will be ignored and files owned by this pattern will be reported as unowned unless a later specific pattern will match that path. It's useful because often we have default owners entry at the begging of the CODOEWNERS file, e.g. * @global-owner1 @global-owner2
   # not_owned_checker_skip_patterns: # optional
    # The owner and repository name. For example, gh-codeowners/codeowners-samples. Used to check if GitHub team is in the given organization and has permission to the given repository.
    #owner_checker_repository: # optional, default is ${{ github.repository }}
    # The comma-separated list of owners that should not be validated. Example: @owner1,@owner2,@org/team1,example@email.com.
    #owner_checker_ignored_owners: # optional
    # Specifies whether CODEOWNERS may have unowned files. For example, `/infra/oncall-rotator/oncall-config.yml` doesn't have owner and this is not reported.
    #owner_checker_allow_unowned_patterns: # optional, default is true
    # Specifies whether only teams are allowed as owners of files.
    #owner_checker_owners_must_be_teams: # optional, default is false
    # Only check listed subdirectories for CODEOWNERS ownership that don't have owners.
    #not_owned_checker_subdirectories: # optional
    # Specifies whether the repository path should be marked as safe. See: https://github.com/actions/checkout/issues/766
    #not_owned_checker_trust_workspace: # optional, default is true
